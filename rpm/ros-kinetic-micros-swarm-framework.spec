Name:           ros-kinetic-micros-swarm-framework
Version:        0.0.17
Release:        2%{?dist}
Summary:        ROS micros_swarm_framework package

Group:          Development/Libraries
License:        BSD
URL:            http://wiki.ros.org/micros_swarm_framework
Source0:        %{name}-%{version}.tar.gz

BuildArch:      noarch

Requires:       ros-kinetic-app-loader
Requires:       ros-kinetic-app1
Requires:       ros-kinetic-app2
Requires:       ros-kinetic-app3
Requires:       ros-kinetic-gsdf-msgs
Requires:       ros-kinetic-micros-swarm
Requires:       ros-kinetic-micros-swarm-gazebo
Requires:       ros-kinetic-micros-swarm-stage
Requires:       ros-kinetic-olfati-saber-flocking
Requires:       ros-kinetic-opensplice-dds-broker
Requires:       ros-kinetic-pso
Requires:       ros-kinetic-ros-broker
Requires:       ros-kinetic-testbb
Requires:       ros-kinetic-testnc
Requires:       ros-kinetic-testrth
Requires:       ros-kinetic-testscdspso
Requires:       ros-kinetic-testvstig
BuildRequires:  ros-kinetic-catkin

%description
This is a programming framework to facilitate application development involving
robot swarms. It makes coding for swarms much easier by providing an adequate
swarm-level abstraction, as well as tools for swarm management, various
communication mechanisms and so on. It also provides essential data structures,
such as Neighbor, Swarm, and Virtual Stigmergy, to the user. Most importantly,
it is completely compatible with ROS Indigo and presented in the form of a C++
library, which means that all resources in the ROS ecosystem are still available
to the user. It is currently extensible to Opensplice DDS.

%prep
%setup -q

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kinetic/setup.sh" ]; then . "/opt/ros/kinetic/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake .. \
        -UINCLUDE_INSTALL_DIR \
        -ULIB_INSTALL_DIR \
        -USYSCONF_INSTALL_DIR \
        -USHARE_INSTALL_PREFIX \
        -ULIB_SUFFIX \
        -DCMAKE_INSTALL_LIBDIR="lib" \
        -DCMAKE_INSTALL_PREFIX="/opt/ros/kinetic" \
        -DCMAKE_PREFIX_PATH="/opt/ros/kinetic" \
        -DSETUPTOOLS_DEB_LAYOUT=OFF \
        -DCATKIN_BUILD_BINARY_PACKAGE="1" \

make %{?_smp_mflags}

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kinetic/setup.sh" ]; then . "/opt/ros/kinetic/setup.sh"; fi
cd obj-%{_target_platform}
make %{?_smp_mflags} install DESTDIR=%{buildroot}

%files
/opt/ros/kinetic

%changelog
* Fri Dec 15 2017 Xuefeng Chang <changxuefengcn@163.com> - 0.0.17-2
- Autogenerated by Bloom

* Fri Dec 15 2017 Xuefeng Chang <changxuefengcn@163.com> - 0.0.17-1
- Autogenerated by Bloom

* Fri Dec 15 2017 Xuefeng Chang <changxuefengcn@163.com> - 0.0.17-0
- Autogenerated by Bloom

* Sat Nov 12 2016 Xuefeng Chang <changxuefengcn@163.com> - 0.0.15-2
- Autogenerated by Bloom

* Sat Nov 12 2016 Xuefeng Chang <changxuefengcn@163.com> - 0.0.15-1
- Autogenerated by Bloom

* Sat Nov 12 2016 Xuefeng Chang <changxuefengcn@163.com> - 0.0.15-0
- Autogenerated by Bloom

